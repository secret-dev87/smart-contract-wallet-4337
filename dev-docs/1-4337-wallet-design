### 基于Argent模式+EIP4337协议实现合约钱包MVP
+ 本文从应用模块角度来分析钱包，落地场景，从而确定一个可演进的业务架构。
+ 进而完成场景的拆分、细化和行为定义，为系统整体给出定义和约束。
+ 实质上完成三部分工作：概念、逻辑和部分物理设计工作内容。

#### 1.MVP功能范围，对外部用户而言
+ 任何人可以免费下载Chrome插件，使用自己的合约钱包地址（无需事先建立，自动创建）接受资产。
+ 任何人都可以从github查看本钱包的所有源代码，以确保可以check安全性，也可以自己从源代码build自己的插件。
+ 可以选择不同网络（主网、Arbi、OP），从而链接不同的EntryPoint，但是钱包地址可以保持不变？
+ 可以使用钱包的基本功能：
+ 收取来自任何EOA 钱包或者Contract wallet合约钱包发送的ERC20或者ERC721、ERC1155等Token资产。
+ Transfer自己用于的上述资产到任何EOA或者Contract wallet Account地址。
+ Transfer目前需要自己预先存储一定的ETH支付自己合约钱包交易的gasfee，未来引入paymaster。
+ 正常连接和使用Layer2的DApp，DApp需要引用4337提供的SDK，从而适配4337钱包的签名登录和交易发起。
+ 
#### 2.MVP的使用形式、网络和基本要求

#### 3.MVP的场景和功能点拆解

#### 4.业务架构（核心场景抽象+未来预判）

#### 5.主要场景的Action和API接口定义（伪代码）

#### 6.合约部分：基于4337标准的钱包，只增加一项：每日转账限额，需要自定义


